{
  "version":"2.0",
  "metadata":{
    "apiVersion":"2022-06-20",
    "endpointPrefix":"cases",
    "jsonVersion":"1.1",
    "protocol":"rest-json",
    "serviceAbbreviation":"ConnectCases",
    "serviceFullName":"Amazon Connect Cases",
    "serviceId":"ConnectCases",
    "signatureVersion":"v4",
    "signingName":"cases",
    "uid":"connectcases-2022-06-20"
  },
  "operations":{
    "BatchGetField":{
      "name":"BatchGetField",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{domainId}/fields-batch",
        "responseCode":200
      },
      "input":{"shape":"BatchGetFieldRequest"},
      "output":{"shape":"BatchGetFieldResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>API for getting a batch of fields</p>"
    },
    "BatchPutFieldOptions":{
      "name":"BatchPutFieldOptions",
      "http":{
        "method":"PUT",
        "requestUri":"/domains/{domainId}/fields/{fieldId}/options",
        "responseCode":200
      },
      "input":{"shape":"BatchPutFieldOptionsRequest"},
      "output":{"shape":"BatchPutFieldOptionsResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ServiceQuotaExceededException"}
      ],
      "documentation":"<p>API for creating and updating a set of field options</p>",
      "idempotent":true
    },
    "CreateCase":{
      "name":"CreateCase",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{domainId}/cases",
        "responseCode":200
      },
      "input":{"shape":"CreateCaseRequest"},
      "output":{"shape":"CreateCaseResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ConflictException"}
      ],
      "documentation":"<p>API for creating a case</p>",
      "idempotent":true
    },
    "CreateDomain":{
      "name":"CreateDomain",
      "http":{
        "method":"POST",
        "requestUri":"/domains",
        "responseCode":200
      },
      "input":{"shape":"CreateDomainRequest"},
      "output":{"shape":"CreateDomainResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ValidationException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ConflictException"},
        {"shape":"ServiceQuotaExceededException"}
      ],
      "documentation":"<p>API for creating a Keystone domain</p>",
      "idempotent":true
    },
    "CreateField":{
      "name":"CreateField",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{domainId}/fields",
        "responseCode":200
      },
      "input":{"shape":"CreateFieldRequest"},
      "output":{"shape":"CreateFieldResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ConflictException"},
        {"shape":"ServiceQuotaExceededException"}
      ],
      "documentation":"<p>API for creating a field</p>",
      "idempotent":true
    },
    "CreateLayout":{
      "name":"CreateLayout",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{domainId}/layouts",
        "responseCode":200
      },
      "input":{"shape":"CreateLayoutRequest"},
      "output":{"shape":"CreateLayoutResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ConflictException"},
        {"shape":"ServiceQuotaExceededException"}
      ],
      "documentation":"<p>API for creating a Keystone layout</p>"
    },
    "CreateRelatedItem":{
      "name":"CreateRelatedItem",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{domainId}/cases/{caseId}/related-items/",
        "responseCode":200
      },
      "input":{"shape":"CreateRelatedItemRequest"},
      "output":{"shape":"CreateRelatedItemResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ServiceQuotaExceededException"}
      ],
      "documentation":"<p>API for creating a related item and associating it with a case</p>",
      "idempotent":true
    },
    "CreateTemplate":{
      "name":"CreateTemplate",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{domainId}/templates",
        "responseCode":200
      },
      "input":{"shape":"CreateTemplateRequest"},
      "output":{"shape":"CreateTemplateResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ConflictException"},
        {"shape":"ServiceQuotaExceededException"}
      ],
      "documentation":"<p>API for creating a new template</p>",
      "idempotent":true
    },
    "GetCase":{
      "name":"GetCase",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{domainId}/cases/{caseId}",
        "responseCode":200
      },
      "input":{"shape":"GetCaseRequest"},
      "output":{"shape":"GetCaseResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>API for getting field values given a case Id and field Ids</p>"
    },
    "GetCaseEventConfiguration":{
      "name":"GetCaseEventConfiguration",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{domainId}/case-event-configuration",
        "responseCode":200
      },
      "input":{"shape":"GetCaseEventConfigurationRequest"},
      "output":{"shape":"GetCaseEventConfigurationResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>API for fetching case event publishing configuration</p>"
    },
    "GetDomain":{
      "name":"GetDomain",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{domainId}",
        "responseCode":200
      },
      "input":{"shape":"GetDomainRequest"},
      "output":{"shape":"GetDomainResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>API for describing an domain</p>"
    },
    "GetLayout":{
      "name":"GetLayout",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{domainId}/layouts/{layoutId}",
        "responseCode":200
      },
      "input":{"shape":"GetLayoutRequest"},
      "output":{"shape":"GetLayoutResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>API for getting a layout</p>"
    },
    "GetTemplate":{
      "name":"GetTemplate",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{domainId}/templates/{templateId}",
        "responseCode":200
      },
      "input":{"shape":"GetTemplateRequest"},
      "output":{"shape":"GetTemplateResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>API for getting a template</p>"
    },
    "ListCasesForContact":{
      "name":"ListCasesForContact",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{domainId}/list-cases-for-contact",
        "responseCode":200
      },
      "input":{"shape":"ListCasesForContactRequest"},
      "output":{"shape":"ListCasesForContactResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>API for listing Cases for a given Contact</p>"
    },
    "ListFieldOptions":{
      "name":"ListFieldOptions",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{domainId}/fields/{fieldId}/options-list",
        "responseCode":200
      },
      "input":{"shape":"ListFieldOptionsRequest"},
      "output":{"shape":"ListFieldOptionsResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>API for returning all field options given a field and a domain</p>"
    },
    "ListFields":{
      "name":"ListFields",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{domainId}/fields-list",
        "responseCode":200
      },
      "input":{"shape":"ListFieldsRequest"},
      "output":{"shape":"ListFieldsResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>API for returning all fields in a domain</p>"
    },
    "ListTagsForResource":{
      "name":"ListTagsForResource",
      "http":{
        "method":"GET",
        "requestUri":"/tags/{arn}",
        "responseCode":200
      },
      "input":{"shape":"ListTagsForResourceRequest"},
      "output":{"shape":"ListTagsForResourceResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>List tags for a resource.</p>",
      "idempotent":true
    },
    "ListTemplates":{
      "name":"ListTemplates",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{domainId}/templates-list",
        "responseCode":200
      },
      "input":{"shape":"ListTemplatesRequest"},
      "output":{"shape":"ListTemplatesResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>API to get all templates in a domain</p>"
    },
    "PutCaseEventConfiguration":{
      "name":"PutCaseEventConfiguration",
      "http":{
        "method":"PUT",
        "requestUri":"/domains/{domainId}/case-event-configuration",
        "responseCode":200
      },
      "input":{"shape":"PutCaseEventConfigurationRequest"},
      "output":{"shape":"PutCaseEventConfigurationResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>API for adding case event publishing configuration</p>"
    },
    "SearchCases":{
      "name":"SearchCases",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{domainId}/cases-search",
        "responseCode":200
      },
      "input":{"shape":"SearchCasesRequest"},
      "output":{"shape":"SearchCasesResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>API for searching cases</p>"
    },
    "SearchRelatedItems":{
      "name":"SearchRelatedItems",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{domainId}/cases/{caseId}/related-items-search",
        "responseCode":200
      },
      "input":{"shape":"SearchRelatedItemsRequest"},
      "output":{"shape":"SearchRelatedItemsResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>API for searching related items that are associated with a case</p>"
    },
    "TagResource":{
      "name":"TagResource",
      "http":{
        "method":"POST",
        "requestUri":"/tags/{arn}",
        "responseCode":200
      },
      "input":{"shape":"TagResourceRequest"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>Tag a resource.</p>",
      "idempotent":true
    },
    "UntagResource":{
      "name":"UntagResource",
      "http":{
        "method":"DELETE",
        "requestUri":"/tags/{arn}",
        "responseCode":200
      },
      "input":{"shape":"UntagResourceRequest"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>Untag a resource.</p>",
      "idempotent":true
    },
    "UpdateCase":{
      "name":"UpdateCase",
      "http":{
        "method":"PUT",
        "requestUri":"/domains/{domainId}/cases/{caseId}",
        "responseCode":200
      },
      "input":{"shape":"UpdateCaseRequest"},
      "output":{"shape":"UpdateCaseResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>API for updating the values of fields on a case</p>"
    },
    "UpdateField":{
      "name":"UpdateField",
      "http":{
        "method":"PUT",
        "requestUri":"/domains/{domainId}/fields/{fieldId}",
        "responseCode":200
      },
      "input":{"shape":"UpdateFieldRequest"},
      "output":{"shape":"UpdateFieldResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ConflictException"}
      ],
      "documentation":"<p>API to update an existing field</p>",
      "idempotent":true
    },
    "UpdateLayout":{
      "name":"UpdateLayout",
      "http":{
        "method":"PUT",
        "requestUri":"/domains/{domainId}/layouts/{layoutId}",
        "responseCode":200
      },
      "input":{"shape":"UpdateLayoutRequest"},
      "output":{"shape":"UpdateLayoutResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ConflictException"}
      ],
      "documentation":"<p>API to update an existing layout</p>",
      "idempotent":true
    },
    "UpdateTemplate":{
      "name":"UpdateTemplate",
      "http":{
        "method":"PUT",
        "requestUri":"/domains/{domainId}/templates/{templateId}",
        "responseCode":200
      },
      "input":{"shape":"UpdateTemplateRequest"},
      "output":{"shape":"UpdateTemplateResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ValidationException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ConflictException"}
      ],
      "documentation":"<p>API to update an existing template</p>",
      "idempotent":true
    }
  },
  "shapes":{
    "AccessDeniedException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"String"}
      },
      "documentation":"<p>This exception is thrown for insufficient access to perform this action</p>",
      "error":{
        "httpStatusCode":403,
        "senderFault":true
      },
      "exception":true
    },
    "Arn":{
      "type":"string",
      "documentation":"<p>Generic Amazon Resource Name used for tagging operations</p>",
      "max":500,
      "min":1
    },
    "AssociationTime":{
      "type":"timestamp",
      "documentation":"<p>Time at which a related item was associated with a Case</p>",
      "timestampFormat":"iso8601"
    },
    "BasicLayout":{
      "type":"structure",
      "members":{
        "moreInfo":{"shape":"LayoutSections"},
        "topPanel":{"shape":"LayoutSections"}
      },
      "documentation":"<p>Content specific to BasicLayout type. It configures fields in top panel and MoreInfo tab of Case UI</p>"
    },
    "BatchGetFieldIdentifierList":{
      "type":"list",
      "member":{"shape":"FieldIdentifier"},
      "documentation":"<p>List of field identifiers for BatchGetField API</p>",
      "max":50,
      "min":1
    },
    "BatchGetFieldRequest":{
      "type":"structure",
      "required":[
        "domainId",
        "fields"
      ],
      "members":{
        "domainId":{
          "shape":"DomainId",
          "location":"uri",
          "locationName":"domainId"
        },
        "fields":{"shape":"BatchGetFieldIdentifierList"}
      }
    },
    "BatchGetFieldResponse":{
      "type":"structure",
      "required":[
        "errors",
        "fields"
      ],
      "members":{
        "errors":{"shape":"BatchGetFieldResponseErrorsList"},
        "fields":{"shape":"BatchGetFieldResponseFieldsList"}
      }
    },
    "BatchGetFieldResponseErrorsList":{
      "type":"list",
      "member":{"shape":"FieldError"},
      "documentation":"<p>List of field error</p>",
      "max":50,
      "min":0
    },
    "BatchGetFieldResponseFieldsList":{
      "type":"list",
      "member":{"shape":"GetFieldResponse"},
      "documentation":"<p>List of detailed field information</p>",
      "max":50,
      "min":0
    },
    "BatchPutFieldOptionsRequest":{
      "type":"structure",
      "required":[
        "domainId",
        "fieldId",
        "options"
      ],
      "members":{
        "domainId":{
          "shape":"DomainId",
          "location":"uri",
          "locationName":"domainId"
        },
        "fieldId":{
          "shape":"FieldId",
          "location":"uri",
          "locationName":"fieldId"
        },
        "options":{"shape":"BatchPutFieldOptionsRequestOptionsList"}
      }
    },
    "BatchPutFieldOptionsRequestOptionsList":{
      "type":"list",
      "member":{"shape":"FieldOption"},
      "documentation":"<p>List of FieldOption objects.</p>",
      "max":50,
      "min":0
    },
    "BatchPutFieldOptionsResponse":{
      "type":"structure",
      "members":{
        "errors":{"shape":"BatchPutFieldOptionsResponseErrorsList"}
      }
    },
    "BatchPutFieldOptionsResponseErrorsList":{
      "type":"list",
      "member":{"shape":"FieldOptionError"},
      "documentation":"<p>List of FieldOptionErrors.</p>",
      "max":50,
      "min":0
    },
    "Boolean":{
      "type":"boolean",
      "box":true
    },
    "CaseArn":{
      "type":"string",
      "documentation":"<p>Unique identifier of a case resource</p>",
      "max":500,
      "min":1
    },
    "CaseEventIncludedData":{
      "type":"structure",
      "required":["fields"],
      "members":{
        "fields":{"shape":"CaseEventIncludedDataFieldsList"}
      },
      "documentation":"<p>Details of what case data is published through case event stream</p>"
    },
    "CaseEventIncludedDataFieldsList":{
      "type":"list",
      "member":{"shape":"FieldIdentifier"},
      "documentation":"<p>List of field identifiers</p>",
      "max":50,
      "min":0
    },
    "CaseFilter":{
      "type":"structure",
      "members":{
        "andAll":{"shape":"CaseFilterAndAllList"},
        "field":{"shape":"FieldFilter"},
        "not":{"shape":"CaseFilter"}
      },
      "documentation":"<p>Represents a type of Case filter</p>",
      "union":true
    },
    "CaseFilterAndAllList":{
      "type":"list",
      "member":{"shape":"CaseFilter"},
      "documentation":"<p>A list of Case filters</p>",
      "max":10,
      "min":0
    },
    "CaseId":{
      "type":"string",
      "documentation":"<p>Unique identifier of a case</p>",
      "max":500,
      "min":1
    },
    "CaseSummary":{
      "type":"structure",
      "required":[
        "caseId",
        "templateId"
      ],
      "members":{
        "caseId":{"shape":"CaseId"},
        "templateId":{"shape":"TemplateId"}
      },
      "documentation":"<p>A summary of a Case</p>"
    },
    "Channel":{
      "type":"string",
      "documentation":"<p>Channel of a Contact</p>",
      "max":100,
      "min":1
    },
    "CommentBody":{
      "type":"string",
      "documentation":"<p>Text in the body of a Comment on a Case</p>",
      "max":1000,
      "min":1
    },
    "CommentBodyTextType":{
      "type":"string",
      "documentation":"<p>Type of the text in the boxy of a Comment on a Case</p>",
      "enum":["Text/Plain"]
    },
    "CommentContent":{
      "type":"structure",
      "required":[
        "body",
        "contentType"
      ],
      "members":{
        "body":{"shape":"CommentBody"},
        "contentType":{"shape":"CommentBodyTextType"}
      },
      "documentation":"<p>Represents the content of a Comment to be returned to users</p>"
    },
    "CommentFilter":{
      "type":"structure",
      "members":{
      },
      "documentation":"<p>A filter for related items of type Comment</p>"
    },
    "ConflictException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{
          "shape":"String",
          "documentation":"<p>Description of the error.</p>"
        }
      },
      "documentation":"<p>Resource name already exists.</p>",
      "error":{
        "httpStatusCode":409,
        "senderFault":true
      },
      "exception":true
    },
    "ConnectedToSystemTime":{
      "type":"timestamp",
      "documentation":"<p>Time at which a Contact was connected, obtained from Connect</p>",
      "timestampFormat":"iso8601"
    },
    "Contact":{
      "type":"structure",
      "required":["contactArn"],
      "members":{
        "contactArn":{"shape":"ContactArn"}
      },
      "documentation":"<p>Object representing a Contact in Connect as an API request field</p>"
    },
    "ContactArn":{
      "type":"string",
      "documentation":"<p>Unique identifier of a contact in Connect</p>",
      "max":500,
      "min":1
    },
    "ContactContent":{
      "type":"structure",
      "required":[
        "channel",
        "connectedToSystemTime",
        "contactArn"
      ],
      "members":{
        "channel":{"shape":"Channel"},
        "connectedToSystemTime":{"shape":"ConnectedToSystemTime"},
        "contactArn":{"shape":"ContactArn"}
      },
      "documentation":"<p>Represents the content of a Contact to be returned to users</p>"
    },
    "ContactFilter":{
      "type":"structure",
      "members":{
        "channel":{"shape":"ContactFilterChannelList"},
        "contactArn":{"shape":"ContactArn"}
      },
      "documentation":"<p>A filter for related items of type Contact</p>"
    },
    "ContactFilterChannelList":{
      "type":"list",
      "member":{"shape":"Channel"},
      "documentation":"<p>A list of channels to filter on for related items of type Contact</p>",
      "max":3,
      "min":0
    },
    "CreateCaseRequest":{
      "type":"structure",
      "required":[
        "domainId",
        "fields",
        "templateId"
      ],
      "members":{
        "clientToken":{
          "shape":"CreateCaseRequestClientTokenString",
          "documentation":"<p>An idempotency token for retrying requests</p>",
          "idempotencyToken":true
        },
        "domainId":{
          "shape":"DomainId",
          "location":"uri",
          "locationName":"domainId"
        },
        "fields":{"shape":"CreateCaseRequestFieldsList"},
        "templateId":{"shape":"TemplateId"}
      }
    },
    "CreateCaseRequestClientTokenString":{
      "type":"string",
      "max":64,
      "min":0
    },
    "CreateCaseRequestFieldsList":{
      "type":"list",
      "member":{"shape":"FieldValue"},
      "documentation":"<p>List of case field values</p>",
      "max":100,
      "min":0
    },
    "CreateCaseResponse":{
      "type":"structure",
      "required":[
        "caseArn",
        "caseId"
      ],
      "members":{
        "caseArn":{"shape":"CaseArn"},
        "caseId":{"shape":"CaseId"}
      }
    },
    "CreateDomainRequest":{
      "type":"structure",
      "required":["name"],
      "members":{
        "name":{"shape":"DomainName"}
      }
    },
    "CreateDomainResponse":{
      "type":"structure",
      "required":[
        "domainArn",
        "domainId",
        "domainStatus"
      ],
      "members":{
        "domainArn":{"shape":"DomainArn"},
        "domainId":{"shape":"DomainId"},
        "domainStatus":{"shape":"DomainStatus"}
      }
    },
    "CreateFieldRequest":{
      "type":"structure",
      "required":[
        "domainId",
        "name",
        "type"
      ],
      "members":{
        "description":{"shape":"FieldDescription"},
        "domainId":{
          "shape":"DomainId",
          "location":"uri",
          "locationName":"domainId"
        },
        "name":{"shape":"FieldName"},
        "type":{"shape":"FieldType"}
      }
    },
    "CreateFieldResponse":{
      "type":"structure",
      "required":[
        "fieldArn",
        "fieldId"
      ],
      "members":{
        "fieldArn":{"shape":"FieldArn"},
        "fieldId":{"shape":"FieldId"}
      }
    },
    "CreateLayoutRequest":{
      "type":"structure",
      "required":[
        "content",
        "domainId",
        "name"
      ],
      "members":{
        "content":{"shape":"LayoutContent"},
        "domainId":{
          "shape":"DomainId",
          "location":"uri",
          "locationName":"domainId"
        },
        "name":{"shape":"LayoutName"}
      }
    },
    "CreateLayoutResponse":{
      "type":"structure",
      "required":[
        "layoutArn",
        "layoutId"
      ],
      "members":{
        "layoutArn":{"shape":"LayoutArn"},
        "layoutId":{"shape":"LayoutId"}
      }
    },
    "CreateRelatedItemRequest":{
      "type":"structure",
      "required":[
        "caseId",
        "content",
        "domainId",
        "type"
      ],
      "members":{
        "caseId":{
          "shape":"CaseId",
          "location":"uri",
          "locationName":"caseId"
        },
        "content":{"shape":"RelatedItemInputContent"},
        "domainId":{
          "shape":"DomainId",
          "location":"uri",
          "locationName":"domainId"
        },
        "type":{"shape":"RelatedItemType"}
      }
    },
    "CreateRelatedItemResponse":{
      "type":"structure",
      "required":[
        "relatedItemArn",
        "relatedItemId"
      ],
      "members":{
        "relatedItemArn":{"shape":"RelatedItemArn"},
        "relatedItemId":{"shape":"RelatedItemId"}
      }
    },
    "CreateTemplateRequest":{
      "type":"structure",
      "required":[
        "domainId",
        "name"
      ],
      "members":{
        "defaultValues":{"shape":"DefaultValueList"},
        "description":{"shape":"TemplateDescription"},
        "domainId":{
          "shape":"DomainId",
          "location":"uri",
          "locationName":"domainId"
        },
        "layoutConfiguration":{"shape":"LayoutConfiguration"},
        "name":{"shape":"TemplateName"},
        "requiredFields":{"shape":"RequiredFieldList"}
      }
    },
    "CreateTemplateResponse":{
      "type":"structure",
      "required":[
        "templateArn",
        "templateId"
      ],
      "members":{
        "templateArn":{"shape":"TemplateArn"},
        "templateId":{"shape":"TemplateId"}
      }
    },
    "CreatedAt":{
      "type":"timestamp",
      "documentation":"<p>Timestamp at which the resource was created</p>",
      "timestampFormat":"iso8601"
    },
    "DefaultValue":{
      "type":"structure",
      "required":[
        "fieldId",
        "value"
      ],
      "members":{
        "fieldId":{"shape":"FieldId"},
        "value":{"shape":"FieldValueUnion"}
      },
      "documentation":"<p>Object representing a field ID and its corresponding value</p>"
    },
    "DefaultValueList":{
      "type":"list",
      "member":{"shape":"DefaultValue"},
      "documentation":"<p>List of default values for fields</p>",
      "max":100,
      "min":0
    },
    "DomainArn":{
      "type":"string",
      "documentation":"<p>Domain Amazon Resource Name</p>",
      "max":500,
      "min":1
    },
    "DomainId":{
      "type":"string",
      "documentation":"<p>Unique identifier of a keystone domain</p>",
      "max":500,
      "min":1
    },
    "DomainName":{
      "type":"string",
      "documentation":"<p>Name of the Keystone domain.</p>",
      "max":100,
      "min":1,
      "pattern":"^.*[\\S]$"
    },
    "DomainStatus":{
      "type":"string",
      "documentation":"<p>Status of the domain</p>",
      "enum":[
        "Active",
        "CreationInProgress",
        "CreationFailed"
      ]
    },
    "Double":{
      "type":"double",
      "box":true
    },
    "EventBridgeConfiguration":{
      "type":"structure",
      "required":["enabled"],
      "members":{
        "enabled":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether the to broadcast case event data to the customer</p>"
        },
        "includedData":{
          "shape":"EventIncludedData",
          "documentation":"<p>Details what data to include in case events</p>"
        }
      },
      "documentation":"<p>Configuration to enable EventBridge case event delivery and determine what data is delivered</p>"
    },
    "EventIncludedData":{
      "type":"structure",
      "members":{
        "caseData":{"shape":"CaseEventIncludedData"},
        "relatedItemData":{"shape":"RelatedItemEventIncludedData"}
      },
      "documentation":"<p>Details of what case and related item data is published through case event stream</p>"
    },
    "FieldArn":{
      "type":"string",
      "documentation":"<p>Field Amazon Resource Name</p>",
      "max":500,
      "min":1
    },
    "FieldDescription":{
      "type":"string",
      "documentation":"<p>Description of a field</p>",
      "max":255,
      "min":0
    },
    "FieldError":{
      "type":"structure",
      "required":[
        "errorCode",
        "id"
      ],
      "members":{
        "errorCode":{
          "shape":"String",
          "documentation":"<p>Error code from getting a field</p>"
        },
        "id":{
          "shape":"FieldId",
          "documentation":"<p>Field identifier which caused the error</p>"
        },
        "message":{
          "shape":"String",
          "documentation":"<p>Error message from getting a field</p>"
        }
      },
      "documentation":"<p>Error for batch describe field API failure</p>"
    },
    "FieldFilter":{
      "type":"structure",
      "members":{
        "contains":{"shape":"FieldValue"},
        "equalTo":{"shape":"FieldValue"},
        "greaterThan":{"shape":"FieldValue"},
        "greaterThanOrEqualTo":{"shape":"FieldValue"},
        "lessThan":{"shape":"FieldValue"},
        "lessThanOrEqualTo":{"shape":"FieldValue"}
      },
      "documentation":"<p>Represents a single document field filter</p>",
      "union":true
    },
    "FieldGroup":{
      "type":"structure",
      "required":["fields"],
      "members":{
        "fields":{"shape":"FieldGroupFieldsList"},
        "name":{
          "shape":"FieldGroupNameString",
          "documentation":"<p>Name of the field group</p>"
        }
      },
      "documentation":"<p>Consists of a group of fields and associated properties</p>"
    },
    "FieldGroupFieldsList":{
      "type":"list",
      "member":{"shape":"FieldItem"},
      "documentation":"<p>Represents an ordered list containing field related information</p>",
      "max":30,
      "min":0
    },
    "FieldGroupNameString":{
      "type":"string",
      "max":100,
      "min":0
    },
    "FieldId":{
      "type":"string",
      "documentation":"<p>Unique identifier of a field</p>",
      "max":500,
      "min":1
    },
    "FieldIdentifier":{
      "type":"structure",
      "required":["id"],
      "members":{
        "id":{"shape":"FieldId"}
      },
      "documentation":"<p>Object containing field identifier information</p>"
    },
    "FieldItem":{
      "type":"structure",
      "required":["id"],
      "members":{
        "id":{"shape":"FieldId"}
      },
      "documentation":"<p>Consists of field specific properties</p>"
    },
    "FieldName":{
      "type":"string",
      "documentation":"<p>Name of the field</p>",
      "max":100,
      "min":1,
      "pattern":"^.*[\\S]$"
    },
    "FieldNamespace":{
      "type":"string",
      "documentation":"<p>Namespace of a Field</p>",
      "enum":[
        "System",
        "Custom"
      ]
    },
    "FieldOption":{
      "type":"structure",
      "required":[
        "active",
        "name",
        "value"
      ],
      "members":{
        "active":{
          "shape":"Boolean",
          "documentation":"<p>Describes whether the FieldOption is active (displayed) or inactive.</p>"
        },
        "name":{"shape":"FieldOptionName"},
        "value":{"shape":"FieldOptionValue"}
      },
      "documentation":"<p>A single FieldOption containing a name, value, and whether or not it is displayed/active.</p>"
    },
    "FieldOptionError":{
      "type":"structure",
      "required":[
        "errorCode",
        "message",
        "value"
      ],
      "members":{
        "errorCode":{
          "shape":"String",
          "documentation":"<p>Error code from creating or updating field option</p>"
        },
        "message":{
          "shape":"String",
          "documentation":"<p>Error message from creating or updating field option</p>"
        },
        "value":{
          "shape":"FieldOptionValue",
          "documentation":"<p>Field option value which caused the error</p>"
        }
      },
      "documentation":"<p>FieldOptionError is an object containing error messages from creating or updating field options.</p>"
    },
    "FieldOptionName":{
      "type":"string",
      "documentation":"<p>FieldOptionName has max length 100 and disallows trailing spaces.</p>",
      "max":100,
      "min":1,
      "pattern":"^.*[\\S]$"
    },
    "FieldOptionValue":{
      "type":"string",
      "documentation":"<p>FieldOptionValue has max length 100 and must be alphanumeric with hyphens and underscores.</p>",
      "max":100,
      "min":1,
      "pattern":"^.*[\\S]$"
    },
    "FieldOptionsList":{
      "type":"list",
      "member":{"shape":"FieldOption"},
      "documentation":"<p>List of FieldOption objects.</p>"
    },
    "FieldSummary":{
      "type":"structure",
      "required":[
        "fieldArn",
        "fieldId",
        "name",
        "namespace",
        "type"
      ],
      "members":{
        "fieldArn":{"shape":"FieldArn"},
        "fieldId":{"shape":"FieldId"},
        "name":{"shape":"FieldName"},
        "namespace":{"shape":"FieldNamespace"},
        "tags":{"shape":"Tags"},
        "type":{"shape":"FieldType"}
      },
      "documentation":"<p>Provides summary information of this field.</p>"
    },
    "FieldType":{
      "type":"string",
      "documentation":"<p>Type of a Field</p>",
      "enum":[
        "Text",
        "Number",
        "Boolean",
        "DateTime",
        "SingleSelect"
      ]
    },
    "FieldValue":{
      "type":"structure",
      "required":[
        "id",
        "value"
      ],
      "members":{
        "id":{"shape":"FieldId"},
        "value":{"shape":"FieldValueUnion"}
      },
      "documentation":"<p>Object containing field identifier and value information</p>"
    },
    "FieldValueUnion":{
      "type":"structure",
      "members":{
        "booleanValue":{
          "shape":"Boolean",
          "documentation":"<p>Boolean value type</p>"
        },
        "doubleValue":{
          "shape":"Double",
          "documentation":"<p>Double value type</p>"
        },
        "stringValue":{
          "shape":"FieldValueUnionStringValueString",
          "documentation":"<p>String value type</p>"
        }
      },
      "documentation":"<p>Union of potential field value types</p>",
      "union":true
    },
    "FieldValueUnionStringValueString":{
      "type":"string",
      "max":500,
      "min":0
    },
    "GetCaseEventConfigurationRequest":{
      "type":"structure",
      "required":["domainId"],
      "members":{
        "domainId":{
          "shape":"DomainId",
          "location":"uri",
          "locationName":"domainId"
        }
      }
    },
    "GetCaseEventConfigurationResponse":{
      "type":"structure",
      "required":["eventBridge"],
      "members":{
        "eventBridge":{"shape":"EventBridgeConfiguration"}
      }
    },
    "GetCaseRequest":{
      "type":"structure",
      "required":[
        "caseId",
        "domainId",
        "fields"
      ],
      "members":{
        "caseId":{
          "shape":"CaseId",
          "location":"uri",
          "locationName":"caseId"
        },
        "domainId":{
          "shape":"DomainId",
          "location":"uri",
          "locationName":"domainId"
        },
        "fields":{"shape":"GetCaseRequestFieldsList"},
        "nextToken":{
          "shape":"NextToken",
          "documentation":"<p>The token used to retrieve the next page of cases, only can be null or empty now</p>"
        }
      },
      "documentation":"<p>Request object for GetCase that defines all request parameters</p>"
    },
    "GetCaseRequestFieldsList":{
      "type":"list",
      "member":{"shape":"FieldIdentifier"},
      "documentation":"<p>List of field identifiers</p>",
      "max":100,
      "min":1
    },
    "GetCaseResponse":{
      "type":"structure",
      "required":[
        "fields",
        "templateId"
      ],
      "members":{
        "fields":{"shape":"GetCaseResponseFieldsList"},
        "nextToken":{"shape":"NextToken"},
        "tags":{"shape":"Tags"},
        "templateId":{"shape":"TemplateId"}
      },
      "documentation":"<p>Response object for GetCase</p>"
    },
    "GetCaseResponseFieldsList":{
      "type":"list",
      "member":{"shape":"FieldValue"},
      "documentation":"<p>List of case field values</p>",
      "max":100,
      "min":0
    },
    "GetDomainRequest":{
      "type":"structure",
      "required":["domainId"],
      "members":{
        "domainId":{
          "shape":"DomainId",
          "location":"uri",
          "locationName":"domainId"
        }
      }
    },
    "GetDomainResponse":{
      "type":"structure",
      "required":[
        "createdAt",
        "domainArn",
        "domainId",
        "domainStatus",
        "name"
      ],
      "members":{
        "createdAt":{"shape":"CreatedAt"},
        "domainArn":{"shape":"DomainArn"},
        "domainId":{"shape":"DomainId"},
        "domainStatus":{"shape":"DomainStatus"},
        "name":{"shape":"DomainName"},
        "tags":{"shape":"Tags"}
      }
    },
    "GetFieldResponse":{
      "type":"structure",
      "required":[
        "fieldArn",
        "fieldId",
        "name",
        "namespace",
        "type"
      ],
      "members":{
        "description":{"shape":"FieldDescription"},
        "fieldArn":{"shape":"FieldArn"},
        "fieldId":{"shape":"FieldId"},
        "name":{"shape":"FieldName"},
        "namespace":{"shape":"FieldNamespace"},
        "tags":{"shape":"Tags"},
        "type":{"shape":"FieldType"}
      },
      "documentation":"<p>Detailed field information</p>"
    },
    "GetLayoutRequest":{
      "type":"structure",
      "required":[
        "domainId",
        "layoutId"
      ],
      "members":{
        "domainId":{
          "shape":"DomainId",
          "location":"uri",
          "locationName":"domainId"
        },
        "layoutId":{
          "shape":"LayoutId",
          "location":"uri",
          "locationName":"layoutId"
        }
      }
    },
    "GetLayoutResponse":{
      "type":"structure",
      "required":[
        "content",
        "layoutArn",
        "layoutId",
        "name"
      ],
      "members":{
        "content":{"shape":"LayoutContent"},
        "layoutArn":{"shape":"LayoutArn"},
        "layoutId":{"shape":"LayoutId"},
        "name":{"shape":"LayoutName"},
        "tags":{"shape":"Tags"}
      }
    },
    "GetTemplateRequest":{
      "type":"structure",
      "required":[
        "domainId",
        "templateId"
      ],
      "members":{
        "domainId":{
          "shape":"DomainId",
          "location":"uri",
          "locationName":"domainId"
        },
        "templateId":{
          "shape":"TemplateId",
          "location":"uri",
          "locationName":"templateId"
        }
      }
    },
    "GetTemplateResponse":{
      "type":"structure",
      "required":[
        "name",
        "templateArn",
        "templateId"
      ],
      "members":{
        "defaultValues":{"shape":"DefaultValueList"},
        "description":{"shape":"TemplateDescription"},
        "layoutConfiguration":{"shape":"LayoutConfiguration"},
        "name":{"shape":"TemplateName"},
        "requiredFields":{"shape":"RequiredFieldList"},
        "tags":{"shape":"Tags"},
        "templateArn":{"shape":"TemplateArn"},
        "templateId":{"shape":"TemplateId"}
      }
    },
    "Integer":{
      "type":"integer",
      "box":true
    },
    "InternalServerException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{
          "shape":"String",
          "documentation":"<p>Description of the error.</p>"
        },
        "retryAfterSeconds":{
          "shape":"Integer",
          "documentation":"<p>Advice to clients on when the call can be safely retried.</p>",
          "location":"header",
          "locationName":"Retry-After"
        }
      },
      "documentation":"<p>Unexpected error during processing of request.</p>",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true,
      "retryable":{"throttling":false}
    },
    "LayoutArn":{
      "type":"string",
      "documentation":"<p>Layout Amazon Resource Name</p>",
      "max":500,
      "min":1
    },
    "LayoutConfiguration":{
      "type":"structure",
      "members":{
        "defaultLayout":{"shape":"LayoutId"}
      },
      "documentation":"<p>Configuration of layouts associated to the template</p>"
    },
    "LayoutContent":{
      "type":"structure",
      "members":{
        "basic":{"shape":"BasicLayout"}
      },
      "documentation":"<p>Union of different versions of layout Content.</p>",
      "union":true
    },
    "LayoutId":{
      "type":"string",
      "documentation":"<p>Unique identifier of a layout</p>",
      "max":500,
      "min":1
    },
    "LayoutName":{
      "type":"string",
      "documentation":"<p>Name of the Layout.</p>",
      "max":100,
      "min":1,
      "pattern":"^.*[\\S]$"
    },
    "LayoutSections":{
      "type":"structure",
      "members":{
        "sections":{"shape":"SectionsList"}
      },
      "documentation":"<p>This represents a sections within a panel/tab of the page-layout.</p>"
    },
    "ListCasesForContactRequest":{
      "type":"structure",
      "required":[
        "contactArn",
        "domainId"
      ],
      "members":{
        "contactArn":{
          "shape":"ContactArn",
          "documentation":"<p>The ContactArn value to retrieve all associated Cases</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "location":"uri",
          "locationName":"domainId"
        },
        "maxResults":{
          "shape":"ListCasesForContactRequestMaxResultsInteger",
          "documentation":"<p>The maximum number of results to retrieve in a single call</p>",
          "box":true
        },
        "nextToken":{
          "shape":"NextToken",
          "documentation":"<p>The token used to retrieve the next page of cases</p>"
        }
      },
      "documentation":"<p>Request parameters for ListCasesForContact</p>"
    },
    "ListCasesForContactRequestMaxResultsInteger":{
      "type":"integer",
      "box":true,
      "max":10,
      "min":1
    },
    "ListCasesForContactResponse":{
      "type":"structure",
      "required":["cases"],
      "members":{
        "cases":{
          "shape":"ListCasesForContactResponseCasesList",
          "documentation":"<p>A list of Case summary information</p>"
        },
        "nextToken":{
          "shape":"NextToken",
          "documentation":"<p>The token used to retrieve the next page of cases</p>"
        }
      },
      "documentation":"<p>Response object for ListCasesForContact that defines the API output</p>"
    },
    "ListCasesForContactResponseCasesList":{
      "type":"list",
      "member":{"shape":"CaseSummary"},
      "max":10,
      "min":0
    },
    "ListFieldOptionsRequest":{
      "type":"structure",
      "required":[
        "domainId",
        "fieldId"
      ],
      "members":{
        "domainId":{
          "shape":"DomainId",
          "location":"uri",
          "locationName":"domainId"
        },
        "fieldId":{
          "shape":"FieldId",
          "location":"uri",
          "locationName":"fieldId"
        },
        "isActive":{
          "shape":"Boolean",
          "documentation":"<p>Filter results to only display active or inactive FieldOptions.</p>",
          "box":true,
          "location":"querystring",
          "locationName":"isActive"
        },
        "maxResults":{
          "shape":"MaxResults",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"NextToken",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "values":{
          "shape":"ValuesList",
          "location":"querystring",
          "locationName":"values"
        }
      }
    },
    "ListFieldOptionsResponse":{
      "type":"structure",
      "required":["options"],
      "members":{
        "nextToken":{"shape":"NextToken"},
        "options":{"shape":"FieldOptionsList"}
      }
    },
    "ListFieldsRequest":{
      "type":"structure",
      "required":["domainId"],
      "members":{
        "domainId":{
          "shape":"DomainId",
          "location":"uri",
          "locationName":"domainId"
        },
        "maxResults":{
          "shape":"MaxResults",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"NextToken",
          "location":"querystring",
          "locationName":"nextToken"
        }
      }
    },
    "ListFieldsResponse":{
      "type":"structure",
      "required":["fields"],
      "members":{
        "fields":{
          "shape":"ListFieldsResponseFieldsList",
          "documentation":"<p>A List of field summary objects</p>"
        },
        "nextToken":{"shape":"NextToken"}
      }
    },
    "ListFieldsResponseFieldsList":{
      "type":"list",
      "member":{"shape":"FieldSummary"},
      "max":100,
      "min":0
    },
    "ListTagsForResourceRequest":{
      "type":"structure",
      "required":["arn"],
      "members":{
        "arn":{
          "shape":"Arn",
          "location":"uri",
          "locationName":"arn"
        }
      },
      "documentation":"<p>ListTagsForResource</p>"
    },
    "ListTagsForResourceResponse":{
      "type":"structure",
      "members":{
        "tags":{"shape":"Tags"}
      },
      "documentation":"<p>ListTagsForResponse</p>"
    },
    "ListTemplatesRequest":{
      "type":"structure",
      "required":["domainId"],
      "members":{
        "domainId":{
          "shape":"DomainId",
          "location":"uri",
          "locationName":"domainId"
        },
        "maxResults":{
          "shape":"MaxResults",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"NextToken",
          "location":"querystring",
          "locationName":"nextToken"
        }
      }
    },
    "ListTemplatesResponse":{
      "type":"structure",
      "required":["templates"],
      "members":{
        "nextToken":{"shape":"NextToken"},
        "templates":{"shape":"ListTemplatesResponseTemplatesList"}
      }
    },
    "ListTemplatesResponseTemplatesList":{
      "type":"list",
      "member":{"shape":"TemplateSummary"},
      "documentation":"<p>List of template summaries</p>",
      "max":100,
      "min":0
    },
    "MaxResults":{
      "type":"integer",
      "documentation":"<p>Max results for List operations.</p>",
      "box":true,
      "max":100,
      "min":1
    },
    "NextToken":{
      "type":"string",
      "documentation":"<p>The token used to retrieve the next page of paged data</p>",
      "max":9000,
      "min":0
    },
    "Order":{
      "type":"string",
      "documentation":"<p>An order enumeration</p>",
      "enum":[
        "Asc",
        "Desc"
      ]
    },
    "PutCaseEventConfigurationRequest":{
      "type":"structure",
      "required":[
        "domainId",
        "eventBridge"
      ],
      "members":{
        "domainId":{
          "shape":"DomainId",
          "location":"uri",
          "locationName":"domainId"
        },
        "eventBridge":{"shape":"EventBridgeConfiguration"}
      }
    },
    "PutCaseEventConfigurationResponse":{
      "type":"structure",
      "members":{
      }
    },
    "RelatedItemArn":{
      "type":"string",
      "documentation":"<p>ARN of a related item</p>",
      "max":500,
      "min":1
    },
    "RelatedItemContent":{
      "type":"structure",
      "members":{
        "comment":{"shape":"CommentContent"},
        "contact":{"shape":"ContactContent"}
      },
      "documentation":"<p>Represents the content of a particular type of related item</p>",
      "union":true
    },
    "RelatedItemEventIncludedData":{
      "type":"structure",
      "required":["includeContent"],
      "members":{
        "includeContent":{
          "shape":"Boolean",
          "documentation":"<p>Indicates whether to include related item content in case events</p>"
        }
      },
      "documentation":"<p>Details of what related item data is published through case event stream</p>"
    },
    "RelatedItemId":{
      "type":"string",
      "documentation":"<p>Unique identifier of a related item</p>",
      "max":500,
      "min":1
    },
    "RelatedItemInputContent":{
      "type":"structure",
      "members":{
        "comment":{"shape":"CommentContent"},
        "contact":{"shape":"Contact"}
      },
      "documentation":"<p>Represents the content of a related item to be created</p>",
      "union":true
    },
    "RelatedItemType":{
      "type":"string",
      "documentation":"<p>Type of a related item</p>",
      "enum":[
        "Contact",
        "Comment"
      ]
    },
    "RelatedItemTypeFilter":{
      "type":"structure",
      "members":{
        "comment":{"shape":"CommentFilter"},
        "contact":{"shape":"ContactFilter"}
      },
      "documentation":"<p>Represents a filter for a single type of related item</p>",
      "union":true
    },
    "RequiredField":{
      "type":"structure",
      "required":["fieldId"],
      "members":{
        "fieldId":{"shape":"FieldId"}
      },
      "documentation":"<p>Wrapper object containing a field identifier</p>"
    },
    "RequiredFieldList":{
      "type":"list",
      "member":{"shape":"RequiredField"},
      "documentation":"<p>List of fields that must have a value provided to create a case</p>",
      "max":100,
      "min":0
    },
    "ResourceNotFoundException":{
      "type":"structure",
      "required":[
        "message",
        "resourceId",
        "resourceType"
      ],
      "members":{
        "message":{
          "shape":"String",
          "documentation":"<p>Description of the error.</p>"
        },
        "resourceId":{
          "shape":"String",
          "documentation":"<p>Hypothetical identifier of the resource affected.</p>"
        },
        "resourceType":{
          "shape":"String",
          "documentation":"<p>Hypothetical type of the resource affected.</p>"
        }
      },
      "documentation":"<p>Request references a resource which does not exist.</p>",
      "error":{
        "httpStatusCode":404,
        "senderFault":true
      },
      "exception":true
    },
    "SearchCasesRequest":{
      "type":"structure",
      "required":["domainId"],
      "members":{
        "domainId":{
          "shape":"DomainId",
          "location":"uri",
          "locationName":"domainId"
        },
        "fields":{
          "shape":"SearchCasesRequestFieldsList",
          "documentation":"<p>The list of field identifiers to be returned as part of the response</p>"
        },
        "filter":{
          "shape":"CaseFilter",
          "documentation":"<p>A structured search query</p>"
        },
        "maxResults":{
          "shape":"SearchCasesRequestMaxResultsInteger",
          "documentation":"<p>The maximum number of results to retrieve in a single call</p>",
          "box":true
        },
        "nextToken":{
          "shape":"NextToken",
          "documentation":"<p>The token used to retrieve the next page of cases</p>"
        },
        "searchTerm":{
          "shape":"SearchCasesRequestSearchTermString",
          "documentation":"<p>A word or phrase to perform a 'quick search' with</p>"
        },
        "sorts":{
          "shape":"SearchCasesRequestSortsList",
          "documentation":"<p>A structured set of sort terms</p>"
        }
      },
      "documentation":"<p>Request object for SearchCases that defines all request parameters</p>"
    },
    "SearchCasesRequestFieldsList":{
      "type":"list",
      "member":{"shape":"FieldIdentifier"},
      "documentation":"<p>List of field identifiers</p>",
      "max":10,
      "min":0
    },
    "SearchCasesRequestMaxResultsInteger":{
      "type":"integer",
      "box":true,
      "max":25,
      "min":1
    },
    "SearchCasesRequestSearchTermString":{
      "type":"string",
      "max":255,
      "min":0
    },
    "SearchCasesRequestSortsList":{
      "type":"list",
      "member":{"shape":"Sort"},
      "documentation":"<p>A list of sorts</p>",
      "max":2,
      "min":0
    },
    "SearchCasesResponse":{
      "type":"structure",
      "required":["cases"],
      "members":{
        "cases":{"shape":"SearchCasesResponseCasesList"},
        "nextToken":{"shape":"NextToken"}
      }
    },
    "SearchCasesResponseCasesList":{
      "type":"list",
      "member":{"shape":"SearchCasesResponseItem"},
      "documentation":"<p>A list of items that represent cases</p>",
      "max":25,
      "min":0
    },
    "SearchCasesResponseItem":{
      "type":"structure",
      "required":[
        "caseId",
        "fields",
        "templateId"
      ],
      "members":{
        "caseId":{"shape":"CaseId"},
        "fields":{"shape":"SearchCasesResponseItemFieldsList"},
        "tags":{"shape":"Tags"},
        "templateId":{"shape":"TemplateId"}
      },
      "documentation":"<p>An item that represents a case from a search result</p>"
    },
    "SearchCasesResponseItemFieldsList":{
      "type":"list",
      "member":{"shape":"FieldValue"},
      "documentation":"<p>List of case field values</p>",
      "max":10,
      "min":0
    },
    "SearchRelatedItemsRequest":{
      "type":"structure",
      "required":[
        "caseId",
        "domainId"
      ],
      "members":{
        "caseId":{
          "shape":"CaseId",
          "location":"uri",
          "locationName":"caseId"
        },
        "domainId":{
          "shape":"DomainId",
          "location":"uri",
          "locationName":"domainId"
        },
        "filters":{
          "shape":"SearchRelatedItemsRequestFiltersList",
          "documentation":"<p>The list of types of related items and their parameters to filter by</p>"
        },
        "maxResults":{
          "shape":"SearchRelatedItemsRequestMaxResultsInteger",
          "documentation":"<p>The maximum number of results to retrieve in a single call</p>",
          "box":true
        },
        "nextToken":{
          "shape":"NextToken",
          "documentation":"<p>The token used to retrieve the next page of related items</p>"
        }
      },
      "documentation":"<p>Request object for SearchRelatedItems that defines all request parameters</p>"
    },
    "SearchRelatedItemsRequestFiltersList":{
      "type":"list",
      "member":{"shape":"RelatedItemTypeFilter"},
      "documentation":"<p>A list of filters for related items</p>",
      "max":10,
      "min":0
    },
    "SearchRelatedItemsRequestMaxResultsInteger":{
      "type":"integer",
      "box":true,
      "max":25,
      "min":1
    },
    "SearchRelatedItemsResponse":{
      "type":"structure",
      "required":["relatedItems"],
      "members":{
        "nextToken":{"shape":"NextToken"},
        "relatedItems":{"shape":"SearchRelatedItemsResponseRelatedItemsList"}
      }
    },
    "SearchRelatedItemsResponseItem":{
      "type":"structure",
      "required":[
        "associationTime",
        "content",
        "relatedItemId",
        "type"
      ],
      "members":{
        "associationTime":{"shape":"AssociationTime"},
        "content":{"shape":"RelatedItemContent"},
        "relatedItemId":{"shape":"RelatedItemId"},
        "tags":{"shape":"Tags"},
        "type":{"shape":"RelatedItemType"}
      },
      "documentation":"<p>An item that represents a RelatedItem from a search result</p>"
    },
    "SearchRelatedItemsResponseRelatedItemsList":{
      "type":"list",
      "member":{"shape":"SearchRelatedItemsResponseItem"},
      "documentation":"<p>A list of items that represent RelatedItems</p>",
      "max":25,
      "min":0
    },
    "Section":{
      "type":"structure",
      "members":{
        "fieldGroup":{"shape":"FieldGroup"}
      },
      "documentation":"<p>A section can be a grouped list of fields.</p>",
      "union":true
    },
    "SectionsList":{
      "type":"list",
      "member":{"shape":"Section"},
      "documentation":"<p>Ordered list containing different kinds of sections that can be added. For now, a SectionsList can only contain one section.</p>",
      "max":1,
      "min":0
    },
    "ServiceQuotaExceededException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{
          "shape":"String",
          "documentation":"<p>Description of the error.</p>"
        }
      },
      "documentation":"<p>Request would cause a service quota to be exceeded.</p>",
      "error":{
        "httpStatusCode":402,
        "senderFault":true
      },
      "exception":true
    },
    "Sort":{
      "type":"structure",
      "required":[
        "fieldId",
        "sortOrder"
      ],
      "members":{
        "fieldId":{"shape":"FieldId"},
        "sortOrder":{"shape":"Order"}
      },
      "documentation":"<p>A field and its sort order for a query</p>"
    },
    "String":{"type":"string"},
    "TagKey":{
      "type":"string",
      "documentation":"<p>Tag key.</p>",
      "max":128,
      "min":1,
      "pattern":"^(?!aws:)[a-zA-Z+-=._:/]+$"
    },
    "TagKeyList":{
      "type":"list",
      "member":{"shape":"TagKey"},
      "documentation":"<p>List of tag keys.</p>",
      "max":50,
      "min":0
    },
    "TagResourceRequest":{
      "type":"structure",
      "required":[
        "arn",
        "tags"
      ],
      "members":{
        "arn":{
          "shape":"Arn",
          "location":"uri",
          "locationName":"arn"
        },
        "tags":{"shape":"Tags"}
      },
      "documentation":"<p>TagResourceRequest</p>"
    },
    "Tags":{
      "type":"map",
      "key":{"shape":"String"},
      "value":{"shape":"String"},
      "documentation":"<p>A map of of key-value pairs that represent tags on a resource</p>"
    },
    "TemplateArn":{
      "type":"string",
      "documentation":"<p>Template Amazon Resource Name</p>",
      "max":500,
      "min":1
    },
    "TemplateDescription":{
      "type":"string",
      "documentation":"<p>Description of a template</p>",
      "max":255,
      "min":0
    },
    "TemplateId":{
      "type":"string",
      "documentation":"<p>Unique identifier of a template</p>",
      "max":500,
      "min":1
    },
    "TemplateName":{
      "type":"string",
      "documentation":"<p>Name of the template</p>",
      "max":100,
      "min":1,
      "pattern":"^.*[\\S]$"
    },
    "TemplateSummary":{
      "type":"structure",
      "required":[
        "arn",
        "id",
        "name",
        "templateArn",
        "templateId"
      ],
      "members":{
        "arn":{
          "shape":"TemplateArn",
          "deprecated":true,
          "deprecatedMessage":"This parameter will be removed soon, templateArn should be used instead."
        },
        "description":{"shape":"TemplateDescription"},
        "id":{
          "shape":"TemplateId",
          "deprecated":true,
          "deprecatedMessage":"This parameter will be removed soon, templateId should be used instead."
        },
        "name":{"shape":"TemplateName"},
        "tags":{"shape":"Tags"},
        "templateArn":{"shape":"TemplateArn"},
        "templateId":{"shape":"TemplateId"}
      },
      "documentation":"<p>Abridged, lightweight form of the Template resource</p>"
    },
    "ThrottlingException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{
          "shape":"String",
          "documentation":"<p>Description of the error.</p>"
        }
      },
      "documentation":"<p>The request was denied due to request throttling.</p>",
      "error":{
        "httpStatusCode":429,
        "senderFault":true
      },
      "exception":true,
      "retryable":{"throttling":false}
    },
    "UntagResourceRequest":{
      "type":"structure",
      "required":[
        "arn",
        "tagKeys"
      ],
      "members":{
        "arn":{
          "shape":"Arn",
          "location":"uri",
          "locationName":"arn"
        },
        "tagKeys":{
          "shape":"TagKeyList",
          "location":"querystring",
          "locationName":"tagKeys"
        }
      },
      "documentation":"<p>UntagResourceRequest</p>"
    },
    "UpdateCaseRequest":{
      "type":"structure",
      "required":[
        "caseId",
        "domainId",
        "fields"
      ],
      "members":{
        "caseId":{
          "shape":"CaseId",
          "location":"uri",
          "locationName":"caseId"
        },
        "domainId":{
          "shape":"DomainId",
          "location":"uri",
          "locationName":"domainId"
        },
        "fields":{"shape":"UpdateCaseRequestFieldsList"}
      },
      "documentation":"<p>Request object for UpdateCase</p>"
    },
    "UpdateCaseRequestFieldsList":{
      "type":"list",
      "member":{"shape":"FieldValue"},
      "documentation":"<p>List of case field values</p>",
      "max":100,
      "min":0
    },
    "UpdateCaseResponse":{
      "type":"structure",
      "members":{
      },
      "documentation":"<p>Empty response object for UpdateCase</p>"
    },
    "UpdateFieldRequest":{
      "type":"structure",
      "required":[
        "domainId",
        "fieldId"
      ],
      "members":{
        "description":{"shape":"FieldDescription"},
        "domainId":{
          "shape":"DomainId",
          "location":"uri",
          "locationName":"domainId"
        },
        "fieldId":{
          "shape":"FieldId",
          "location":"uri",
          "locationName":"fieldId"
        },
        "name":{"shape":"FieldName"}
      }
    },
    "UpdateFieldResponse":{
      "type":"structure",
      "members":{
      }
    },
    "UpdateLayoutRequest":{
      "type":"structure",
      "required":[
        "domainId",
        "layoutId"
      ],
      "members":{
        "content":{"shape":"LayoutContent"},
        "domainId":{
          "shape":"DomainId",
          "location":"uri",
          "locationName":"domainId"
        },
        "layoutId":{
          "shape":"LayoutId",
          "location":"uri",
          "locationName":"layoutId"
        },
        "name":{"shape":"LayoutName"}
      }
    },
    "UpdateLayoutResponse":{
      "type":"structure",
      "members":{
      }
    },
    "UpdateTemplateRequest":{
      "type":"structure",
      "required":[
        "domainId",
        "templateId"
      ],
      "members":{
        "defaultValues":{"shape":"DefaultValueList"},
        "description":{"shape":"TemplateDescription"},
        "domainId":{
          "shape":"DomainId",
          "location":"uri",
          "locationName":"domainId"
        },
        "layoutConfiguration":{"shape":"LayoutConfiguration"},
        "name":{"shape":"TemplateName"},
        "requiredFields":{"shape":"RequiredFieldList"},
        "templateId":{
          "shape":"TemplateId",
          "location":"uri",
          "locationName":"templateId"
        }
      }
    },
    "UpdateTemplateResponse":{
      "type":"structure",
      "members":{
      }
    },
    "ValidationException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{
          "shape":"String",
          "documentation":"<p>Description of the error.</p>"
        }
      },
      "documentation":"<p>The input fails to satisfy the constraints specified by an AWS service.</p>",
      "error":{
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true
    },
    "Value":{
      "type":"string",
      "documentation":"<p>A single FieldOption value filter.</p>",
      "max":100,
      "min":0
    },
    "ValuesList":{
      "type":"list",
      "member":{"shape":"Value"},
      "documentation":"<p>List of FieldOption values to filter on for ListFieldOptions.</p>",
      "max":1,
      "min":0
    }
  },
  "documentation":"<p>Amazon Connect Cases - Case management service for Amazon Connect</p>"
}
